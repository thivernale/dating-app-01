// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * dating_app_01 API
 * dating_app_01 API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateMatchRequest,
  Match,
} from '../models/index';
import {
    CreateMatchRequestFromJSON,
    CreateMatchRequestToJSON,
    MatchFromJSON,
    MatchToJSON,
} from '../models/index';

export interface CreateMatchOperationRequest {
    createMatchRequest: CreateMatchRequest;
}

/**
 * 
 */
export class MatchApi extends runtime.BaseAPI {

    /**
     * POST api/matches
     */
    async createMatchRaw(requestParameters: CreateMatchOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Match>> {
        if (requestParameters['createMatchRequest'] == null) {
            throw new runtime.RequiredError(
                'createMatchRequest',
                'Required parameter "createMatchRequest" was null or undefined when calling createMatch().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/matches`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateMatchRequestToJSON(requestParameters['createMatchRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MatchFromJSON(jsonValue));
    }

    /**
     * POST api/matches
     */
    async createMatch(requestParameters: CreateMatchOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Match> {
        const response = await this.createMatchRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * GET api/matches
     */
    async getAllMatchesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Match>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/matches`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(MatchFromJSON));
    }

    /**
     * GET api/matches
     */
    async getAllMatches(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Match>> {
        const response = await this.getAllMatchesRaw(initOverrides);
        return await response.value();
    }

}
