// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * dating_app_01 API
 * dating_app_01 API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Profile
 */
export interface Profile {
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    lastName?: string;
    /**
     * 
     * @type {number}
     * @memberof Profile
     */
    age?: number;
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    bio?: string;
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    imageUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    ethnicity?: string;
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    gender?: ProfileGenderEnum;
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    myersBriggsPersonalityType?: string;
}


/**
 * @export
 */
export const ProfileGenderEnum = {
    Male: 'MALE',
    Female: 'FEMALE',
    NonBinary: 'NON_BINARY',
    Unknown: 'UNKNOWN'
} as const;
export type ProfileGenderEnum = typeof ProfileGenderEnum[keyof typeof ProfileGenderEnum];


/**
 * Check if a given object implements the Profile interface.
 */
export function instanceOfProfile(value: object): value is Profile {
    return true;
}

export function ProfileFromJSON(json: any): Profile {
    return ProfileFromJSONTyped(json, false);
}

export function ProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): Profile {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'firstName': json['firstName'] == null ? undefined : json['firstName'],
        'lastName': json['lastName'] == null ? undefined : json['lastName'],
        'age': json['age'] == null ? undefined : json['age'],
        'bio': json['bio'] == null ? undefined : json['bio'],
        'imageUrl': json['imageUrl'] == null ? undefined : json['imageUrl'],
        'ethnicity': json['ethnicity'] == null ? undefined : json['ethnicity'],
        'gender': json['gender'] == null ? undefined : json['gender'],
        'myersBriggsPersonalityType': json['myersBriggsPersonalityType'] == null ? undefined : json['myersBriggsPersonalityType'],
    };
}

export function ProfileToJSON(json: any): Profile {
    return ProfileToJSONTyped(json, false);
}

export function ProfileToJSONTyped(value?: Profile | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'age': value['age'],
        'bio': value['bio'],
        'imageUrl': value['imageUrl'],
        'ethnicity': value['ethnicity'],
        'gender': value['gender'],
        'myersBriggsPersonalityType': value['myersBriggsPersonalityType'],
    };
}

